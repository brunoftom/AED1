//EX.01//
//main.c//
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#define max 20
#include "lista.h"

int main()
{
    int op, elem, qtd, n;
    Lista lst;

    do{
        system("CLS || clear");
        do{
            printf(" --- LISTAS ESTATICAS SEQUENCIAIS --- \n\n");
            printf(" Escolha uma opcao\n");
            printf(" 1. Criar lista\n");
            printf(" 2. Verificar lista vazia\n");
            printf(" 3. Verificar lista cheia\n");
            printf(" 4. Inserir elemento\n");
            printf(" 5. Excluir elemento\n");
            printf(" 6. Imprimir lista\n");
            printf(" 7. SAIR\n");
            printf(" Opcao: ");
            scanf("%d", &op);
            if((op < 1) || (op > 7)) {

                printf("\n\n Opcao Invalida! Tente novamente...");
                getch();
                system("CLS || clear");
            }
        } while((op < 1) || (op > 7));

        switch(op)
        {
            case 1:
                printf("\nOpcao 1 escolhida -  Criar lista\n");
                lst = cria_lista();
                if(lst == NULL)
                {
                    printf("Falha na criacao da lista!\n\n");
                    return 0;
                }else{
                    printf("Lista criada com sucesso!!\n\n");
                }
                getch();
                break;
            case 2:
                printf("\nOpcao 2 escolhida -  Verificar lista vazia\n");
                if(lista_vazia(lst) == 1){
                    printf("\nLista esta vazia\n");
                }else{
                    printf("\nLista nao esta vazia\n");
                }
                getch();
                break;

            case 3:
                printf("\nOpcao 3 escolhida -  Verificar lista cheia\n");
                if(lista_cheia(lst) == 1){
                    printf("Lista esta cheia \n");
                }else
                {
                    printf("Lista nao esta cheia\n");
                }
                getch();
                break;

            case 4:
                printf("\nOpcao 4 escolhida -  Inserir elemento\n");
                if(lista_cheia(lst) == 1)
                    printf("Lista esta cheia \n");

                printf("Quantos elementos deseja inserir na lista? ");
                scanf("%d", &qtd);
                 while(qtd<0 || qtd>max)
                    {
                        printf("\nQuantidade inv√°lida!\n");
                        printf("\nDigite novamente: ");
                        scanf("%d", &qtd);
                    }
                printf("Insira os elementos:\n");

                for(int i = 0;i<qtd; i++)
                {
                    if(lista_cheia(lst) == 1){
                        printf("Lista esta cheia \n");
                    }
                    printf("Elemento %d: ", i+1);
                    scanf("%d", &elem);
                    insere_elem(lst, elem);
                }
                getch();
                break;

            case 5:
                printf("\nOpcao 5 escolhida -  Remover elemento\n");
                if(lista_vazia(lst) == 1){
                    printf("\nLista esta vazia\n");
                }

                printf("Qual elemento deseja remover? ");
                scanf("%d", &n);
                if(remove_elem(lst, n) == 0)
                {
                    printf("\nElemento nao encontrado na lista!\n");
                }else{
                    printf("\nElemento removido com sucesso!\n");
                }
                getch();
                break;

            case 6:
                printf("\nOpcao 6 escolhida -  Imprimir lista\n");
                if(lista_vazia(lst) == 1){
                    printf("\nLista esta vazia\n");
                    break;
                }
                printf("\nLista: {");
                for(int j=0; j<qtd; j++)
                {
                    obtem_valor_elem(lst,j,&elem);
                    printf(" %d ", elem);
                }
                printf("}\n");
                getch();
                break;

            case 7:
                printf("\n\nFim do programa \n\n");
                break;

            default:
				printf("\n\n Pressione qualquer tecla para FINALIZAR...");
				getch();
        }
    } while(op != 7);

    return 0;
}

//lista.c//
#include <stdio.h>
#include <stdlib.h>
#define max 20

#include "lista.h"

struct lista{
    int no[max];
    int fim;
};
typedef struct lista *Lista;
Lista cria_lista(){
    Lista lst;
    lst = (Lista)malloc(sizeof(struct lista));

    if(lst != NULL)
        lst->fim = 0;

    return lst;
}

int lista_vazia(Lista lst){
    if(lst->fim == 0)
        return 1;
    else
        return 0;
}

int lista_cheia(Lista lst){
    if(lst->fim == max)
        return 1;
    else
        return 0;
}

int insere_elem(Lista lst, int elem){
    if(lst == NULL || lista_cheia(lst) == 1)
        return 0;

    lst->no[lst->fim] = elem;
    lst->fim++;

    return 1;
}

int remove_elem(Lista lst, int elem){
    if(lst == NULL || lista_vazia(lst) == 1)
        return 0;

    int i, aux = 0;

    while(aux < lst->fim && lst->no[aux] != elem)
        aux++;

    if(aux == lst->fim)
        return 0;

    for(i = aux+1; i<lst->fim; i++){
        lst->no[i-1] = lst->no[i];
    }

    lst->fim--;
    return 1;
}

int obtem_valor_elem(Lista lst, int i, int *nro){
    if(lst == NULL || lista_vazia(lst))
        return 0;

    *nro = (*lst).no[i];

    return 1;
}

//lista.h//
#ifndef LISTA_H_INCLUDED
#define LISTA_H_INCLUDED

typedef struct lista *Lista;
Lista cria_lista();
int lista_vazia(Lista lst);
int lista_cheia(Lista lst);
int insere_elem(Lista lst, int elem);
int remove_elem(Lista lst, int elem);
int obtem_valor_elem(Lista lst, int i, int *nro);

#endif // LISTA_H_INCLUDED
s
