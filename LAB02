//EX.01//
#include <stdio.h>
#include <stdlib.h>

int main()
{
    int a = 40; // cria uma variável do tipo inteiro, chamada a, e inicializa
 // com valor 40;
    int *p; // cria uma variável do tipo ponteiro para inteiro, chamada p, e o
 // conteúdo inicial é lixo;
    p = &a; // faz p receber o endereço de a. Dizemos que p aponta para a


    printf("\nO endereco da variavel 'a' eh: %1u\n", &a);//endereço var. a

    printf("\nO endereco da variavel 'a' eh: %1u\n", p);//endereco var. a


    return 0;
}

//EX.02//
#include <stdio.h>
#include <stdlib.h>

int main()
{
    char nome[20] = {'J','o','s','e',' ' ,'A','u','g', 'u', 's', 't', 'o'};
    for(int i = 0; i<20; i++){
         printf("%c", *(nome+i));

    }
    printf("\n");
    return 0;
}

//EX.03//
#include <stdio.h>
#include <stdlib.h>

int main()
{
    double vet[10] = {1,2,3,4,5,6,7,8,9,10};
    int i;

    for(i = 0; i < 10; i++){
        printf("%.2f\n", *(vet+i));
    }
    return 0;
}

//EX.04//
#include <stdio.h>
#include <stdlib.h>

int main()
{
    int vet[10] = {1,2,3,4,5,6,7,8,9,10};
    int i;

    for(i = 0; i < 10; i++){
        printf("%d\n", *(vet+i));
    }
    return 0;
}

//EX.05//
#include <stdio.h>
#include <stdlib.h>

int main(){

    int *array;
    int i, n = 5;

    array = (int *)malloc(n*sizeof(int));

    for (i = 0; i<n; i++){
        printf("Informe o %do numero: ", i+1);
        scanf("%d", &array[i]);
    }
    printf("\nArray:\n");
    for(i= 0; i<n; i++){
        printf("[%d] ", array[i]);
    }

    free(array);
    return 0;
}

//EX.08//
#include <stdio.h>
#include <stdlib.h>

int main(){
    int tam, i, par = 0, impar = 0;
    int *nmr;

     printf("Quantos inteiros serao lidos? ");
     scanf("%d", &tam);
     nmr = (int *)malloc(tam*sizeof(int));
     printf("\n");

     for(i = 0; i<tam;i++){
        printf("%do inteiro: ", i+1);
        scanf("%d", &nmr[i]);
         if(nmr[i] % 2 == 0)
            par++;
         else
            impar++;
     }
     printf("\nSao pares: %d dos %d inteiros lidos", par, tam);
     printf("\nSao impares: %d dos %d inteiros lidos\n", impar, tam);

     /*
     for(i = 0; i<tam; i++){
        printf("%d ", nmr[i]);
     }*/

    free(nmr);
    return 0;
}


